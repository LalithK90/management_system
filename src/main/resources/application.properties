server.port=8080
# { Datasource }
#===============
spring.datasource.url=jdbc:mysql://localhost:3306/pcmms
spring.datasource.username=root
spring.datasource.password=12345
# { Hikari properties }
#======================
spring.datasource.hikari.data-source-properties.createDatabaseIfNotExist=true
spring.datasource.hikari.data-source-properties.useUnicode=true
spring.datasource.hikari.data-source-properties.characterEncoding=UTF-8
spring.datasource.hikari.data-source-properties.autoReconnect=true
spring.datasource.hikari.data-source-properties.useSSL=false
#maximum number of milliseconds that a client will wait for a connection
#=============================================
#spring.datasource.hikari.connection-timeout=20000
#minimum number of idle connections maintained by HikariCP in a connection pool
#=============================================
#spring.datasource.hikari.minimum-idle=10
#maximum pool size
#=============================================
#spring.datasource.hikari.maximum-pool-size=10
#maximum idle time for connection
#=============================================
#spring.datasource.hikari.idle-timeout=10000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
#=============================================
#spring.datasource.hikari.max-lifetime=1000
#default auto-commit behavior.
#=============================================
#spring.datasource.hikari.auto-commit=true

# { Hibernate properties }
#=========================
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.CharSet=UFT-8
#utf8mb4 is support all lind of unicode characters
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.autoReconnect=true
spring.jpa.properties.hibernate.connection.useSSL=true
#spring.jpa.show-sql = true
spring.jpa.open-in-view=true

# { Session config }
#===================
server.servlet.session.cookie.max-age=20m
server.servlet.session.timeout=15m
spring.session.timeout=10m

# { File up load properties }
#============================
# Max file size.
spring.servlet.multipart.max-file-size=10MB
# Max request size.
spring.servlet.multipart.max-request-size=10MB
## Jackson properties
# No serializer found for class org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer --> This error was happened because of LAZY loading get class so
# if need to
# PROBLEM SLOVEN
# without adding above code can be sloven by adding to implements Serializable to the entity class
spring.jackson.serialization.fail-on-empty-beans=false

# to override default bean
#spring.main.allow-bean-definition-overriding=true
# { Dev Tool Option }
#====================
# devtool properties would change normally with spring update
#       hence, remember to refer spring documentation

# { Email Service }
#==================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=learnerskarunadasa@gmail.comsas
spring.mail.password=nuwan2018asa
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# { Need to see what happened on working { LOGIN LEVEL } }
#=====================================================
logging.pattern.level=user:%X{user} %5p
spring.output.ansi.enabled=always
spring.http.log-request-details=true
#logging.level.root=WARN
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.security=ERROR
#logging.level.org.thymeleaf = TRACE
#logging.level.org.hibernate = ERROR
#logging.level.org.apache.logging=TRACE
# this used to mange security log in separate file
#logging.path=D:/On Going Project/management_system


# { https enable to springboot app }
#====================================
#server.http2.enabled=true
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-password=password
#server.ssl.key-alias=linkedin
#server.ssl.key-store-type=PKCS12



#spring cache configuration
spring.cache.jcache.config=classpath:ehcache3.xml

#acutor
info.app.name=Excise Department ICT Branch
info.app.description=Sri Lanka Excise Department Complaint Management
info.app.version=1.0.0

# DEVTOOLS
#====================
spring.devtools.livereload.enabled=true 
  # Enable a livereload.com compatible server.
spring.devtools.livereload.port=35729 
  # Server port.
spring.devtools.restart.additional-exclude=
  # Additional patterns that should be excluded from triggering a full restart.
spring.devtools.restart.additional-paths=
  # Additional paths to watch for changes.
spring.devtools.restart.enabled=true
  # Enable automatic-restart.
spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties 
  # Patterns that should be excluded from triggering a full restart.
#spring.devtools.restart.poll-interval=1000
  # Amount of time (in milliseconds) to wait between polling for classpath changes.
#spring.devtools.restart.quiet-period=400
  # Amount of quiet time (in milliseconds) required without any classpath changes before a restart is triggered.
spring.devtools.restart.trigger-file=
  #Name of a specific file that when changed will trigger the restart check. If not specified any classpath file change will trigger the restart.

#Disabaled default favicon icon
#====================================
#spring.mvc.favicon.enabled=false